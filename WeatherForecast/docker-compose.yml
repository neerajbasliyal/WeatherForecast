version: '3.8'

services:
  weatherforecast:
    image: ${DOCKER_REGISTRY-}weatherforecast
    container_name: weatherforecast
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=44400
    ports:
      - "54773:80"
      - "44400:443"
    volumes:
      - ${HOME}/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
      - ${HOME}/.aspnet/https:/root/.aspnet/https:ro
    depends_on:
      - elasticsearch
    networks:
      - docker-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    platform: linux/arm64/v8
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - docker-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    platform: linux/arm64/v8
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - docker-network

networks:
  docker-network:
    driver: bridge

volumes:
  elasticsearch-data:
